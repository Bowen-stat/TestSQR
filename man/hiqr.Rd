% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hipr.R
\name{hiqr}
\alias{hiqr}
\title{Efficient admm algorithm for projection matrix estimation}
\usage{
hiqr(
  X,
  Z,
  lambda = NULL,
  lambda.min = sqrt(log(max(ncol(X), ncol(Z)))/nrow(X)),
  nlambda = 50,
  err = 10^(-5),
  maxIter = 1000,
  rho = 1
)
}
\arguments{
\item{X}{data matrix of dimension n*px.}

\item{Z}{data matrix of dimension n*pz.}

\item{lambda}{user supplied tuning parameter; Default is NULL and the program compute its own
sequence based on \code{nlambda}.}

\item{lambda.min}{smallest value for lambda, as a fraction of lambda.max which is available when lambda is NULL. 
Default is sqrt(log(p)/n).}

\item{nlambda}{the length of the tuning parameter sequence which is available when lambda is NULL. Default is 50.}

\item{err}{the precision used to stop the convergence. Default is 1e-5. 
Iterations stop when average absolute parameter change is less than \code{err}.}

\item{maxIter}{Maximum number of iterations. Default is 1000.}

\item{rho}{step parameter for the ADMM. Default is 1.}
}
\value{
A list with components
\item{Omega}{a list of sparse pz*px matrices corresponding to lambda.}
\item{lambda}{the used lambda for the solution path.}
\item{niter}{the number of iterations for each element of lambda.}
}
\description{
Efficient admm algorithm for projection matrix estimation
}
